{"version":3,"sources":["County.js","Township.js","Village.js","Map.js","InfoModal.js","App.js","serviceWorker.js","index.js"],"names":["Path","_this$props","this","props","county","path","name","data","description","setInfo","clearSelectedCounty","zoomInSelectedCounty","react_default","a","createElement","id","className","fill","stroke","strokeWidth","d","onMouseOver","onClick","PureComponent","County","nextProps","isEqual","_this$props2","topoData","features","map","i","_county$properties","properties","COUNTYNAME","COUNTYCODE","targetData","county_name","console","log","filter","County_Path","key","county_data","county_description","Component","town","clearSelectedTown","zoomInSelectedTown","_town$properties","TOWNNAME","data-county","style","opacity","display","Township","_town$properties2","TOWNCODE","township_name","Township_Path","concat","township_data","township_description","village","clearSelectedVillage","zoomInSelectedVillage","_village$properties","VILLNAME","data-town","Village","_village$properties2","VILLCODE","village_name","Village_Path","village_data","village_description","Map","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","selectedCounty","selection","tmpSelectedCounty","transition","duration","on","selectedTown","tmpSelectedTown","selectedVillage","select","attr","animate","arguments","length","undefined","element","mapRef","selectAll","zoomAnimate","target","_this$state","state","height","center","bounds","x","y","scale","Math","max","translate","zoom","transform","d3","zoomEvent","zoom_fit","zoom_out","wheelEvent","wheelDelta","exportToPNG","saveSvgAsPng","goto_county","countyName","targetCounty","topoCounty","c","get_county_data","set_county_data","forEach","setState","update","defineProperty","$set","get_county_description","set_county_description","goto_township","townName","_this$state2","topoTownship","targetTown","t","_t$properties","get_township_data","set_township_data","get_township_description","set_township_description","goto_village","villageName","_this$state3","topoVillage","_t$properties2","targetVillage","v","_v$properties","get_village_data","set_village_data","get_village_description","_v$properties2","set_village_description","topojson","twVillage","objects","topoTown","twTown","twCounty","counties","_c$properties","push","code","parseInt","random","towns","_t$properties3","villages","_v$properties3","setDatas","currentViewport","w","width","document","body","clientWidth","clientHeight","prj","geoMercator","geoPath","projection","nextState","_this$state4","throttle","_this2","_this$state5","ref","src_County","src_Township","src_Village","InfoModal","_ref","info","App","JSON","stringify","onCountySelect","e","parse","value","onTownSelect","_JSON$parse2","onVillageSelect","toCounty","getCountyData","alert","setCountyData","countyData","getCountyDescription","desciption","setCountyDescription","countyDescription","toTown","_JSON$parse9","getTownshipData","_JSON$parse10","setTownshipData","_JSON$parse11","townshipData","getTownshipDescription","_JSON$parse12","setTownshipDescription","_JSON$parse13","townshipDescription","toVillage","_JSON$parse14","getVillageData","_JSON$parse15","setVillageData","_JSON$parse16","villageData","getVillageDescription","_JSON$parse17","setVillageDescription","_JSON$parse18","villageDescription","backToTopLevel","flex","Map_Map","countySelect","onChange","type","townSelect","villageSelect","InfoModal_InfoModal","Boolean","window","location","hostname","match","ReactDOM","render","App_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e9227ab8.chunk.js","sourcesContent":["import React, { Component, PureComponent } from 'react';\nimport isEqual from 'react-fast-compare';\n\nclass Path extends PureComponent {\n  render() {\n    const { county, path, name, data, description, setInfo, clearSelectedCounty, zoomInSelectedCounty } = this.props;\n\n\n    return (\n      <g\n        id={name}\n        className='county'\n      >\n        <path\n          fill='#FEFEE9'\n          stroke='#777'\n          strokeWidth={0.2}\n          d={path(county)}\n          onMouseOver={() => {\n            setInfo({\n              name,\n              data,\n              description\n            });\n          }}\n          onClick={() => {\n            clearSelectedCounty();\n            zoomInSelectedCounty(county);\n          }}\n        />\n      </g>\n    )\n  }\n}\nclass County extends Component {\n  shouldComponentUpdate(nextProps) {\n    const { data } = this.props;\n    if (!isEqual(data, nextProps.data)) {\n      return true\n    }\n    return false;\n  }\n  render() {\n    const { topoData, data, path, setInfo, clearSelectedCounty, zoomInSelectedCounty } = this.props;\n\n    return (\n      <g className='countyContainer'>\n        {\n          topoData.features.map((county, i) => {\n            const { COUNTYNAME, COUNTYCODE } = county.properties;\n            {/* const targetData = data.filter(d => d.county_name === COUNTYNAME)[0]; */ }\n            let targetData = data[i];\n            if (targetData.county_name !== COUNTYNAME) {\n              console.log('index Wrong!');\n              targetData = data.filter(d => d.county_name === COUNTYNAME)[0];\n            }\n            return (\n              <Path\n                key={COUNTYCODE}\n                county={county}\n                name={COUNTYNAME}\n                path={path}\n                data={targetData.county_data}\n                description={targetData.county_description}\n                setInfo={setInfo}\n                clearSelectedCounty={clearSelectedCounty}\n                zoomInSelectedCounty={zoomInSelectedCounty}\n              />\n            )\n          })\n        }\n      </g>\n    );\n  }\n}\n\nexport default County;","import React, { Component, PureComponent } from 'react';\nimport isEqual from 'react-fast-compare';\n\nclass Path extends PureComponent {\n  render() {\n    const { town, path, name, data, description, setInfo, clearSelectedTown, zoomInSelectedTown } = this.props;\n    const { TOWNNAME, COUNTYNAME } = town.properties;\n\n    return (\n      <g\n        id={TOWNNAME}\n        data-county={COUNTYNAME}\n        className='town'\n        style={{\n          opacity: 0,\n          display: 'none'\n        }}\n      >\n        <path\n          fill='#FEFEE9'\n          stroke='pink'\n          strokeWidth={0.2}\n          d={path(town)}\n          onMouseOver={() => {\n            setInfo({\n              name,\n              data,\n              description\n            });\n          }}\n          onClick={() => {\n            clearSelectedTown();\n            zoomInSelectedTown(town)\n          }}\n        />\n      </g>\n    )\n  }\n}\n\nclass Township extends Component {\n  shouldComponentUpdate(nextProps) {\n    const { data } = this.props;\n    if (!isEqual(data, nextProps.data)) {\n      return true\n    }\n    return false;\n  }\n  render() {\n    const { topoData, data, path, setInfo, clearSelectedTown, zoomInSelectedTown } = this.props;\n    return (\n      <g className='townContainer'>\n        {\n          topoData.features.map((town, i) => {\n            const { TOWNNAME, COUNTYNAME, TOWNCODE } = town.properties;\n            {/* const targetData = data.filter(d => d.county_name === COUNTYNAME && d.township_name === TOWNNAME)[0]; */ }\n            let targetData = data[i];\n            if (targetData.county_name !== COUNTYNAME && targetData.township_name !== TOWNNAME) {\n              console.log('index Wrong!');\n              targetData = data.filter(d => d.county_name === COUNTYNAME && d.township_name === TOWNNAME)[0];\n            }\n            return (\n\n              <Path\n                key={TOWNCODE}\n                town={town}\n                name={`${COUNTYNAME}${TOWNNAME}`}\n                path={path}\n                data={targetData.township_data}\n                description={targetData.township_description}\n                setInfo={setInfo}\n                clearSelectedTown={clearSelectedTown}\n                zoomInSelectedTown={zoomInSelectedTown}\n              />\n            )\n          })\n        }\n      </g>\n    );\n  }\n}\n\nexport default Township;","import React, { Component, PureComponent } from 'react';\nimport isEqual from 'react-fast-compare';\nclass Path extends PureComponent {\n  render() {\n    const { village, path, name, data, description, setInfo, clearSelectedVillage, zoomInSelectedVillage } = this.props;\n    const { VILLNAME, TOWNNAME, COUNTYNAME } = village.properties;\n\n    return (\n      <g\n        id={VILLNAME}\n        data-town={TOWNNAME}\n        data-county={COUNTYNAME}\n        className='village'\n        style={{\n          opacity: 0,\n          display: 'none',\n        }}\n      >\n        <path\n          fill='#FEFEE9'\n          stroke='skyblue'\n          strokeWidth={0.2}\n          d={path(village)}\n          onMouseOver={() => {\n            setInfo({\n              name,\n              data,\n              description\n            });\n          }}\n          onClick={() => {\n            clearSelectedVillage();\n            zoomInSelectedVillage(village)\n          }}\n        />\n      </g>\n    )\n  }\n}\n\nclass Village extends Component {\n  shouldComponentUpdate(nextProps) {\n    const { data } = this.props;\n    if (!isEqual(data, nextProps.data)) {\n      return true\n    }\n    return false;\n  }\n  render() {\n    const { topoData, data, path, setInfo, clearSelectedVillage, zoomInSelectedVillage } = this.props;\n\n    return (\n      <g className='villageContainer'>\n        {\n          topoData.features.map((village, i) => {\n            const { VILLNAME, TOWNNAME, COUNTYNAME, VILLCODE } = village.properties;\n            {/* const targetData = data.filter(d => d.county_name === COUNTYNAME && d.township_name === TOWNNAME && d.village_name === VILLNAME)[0]; */ }\n            let targetData = data[i];\n            if (targetData.county_name !== COUNTYNAME && targetData.township_name !== TOWNNAME && targetData.village_name !== VILLNAME) {\n              console.log('index Wrong!');\n              targetData = data.filter(d => d.county_name === COUNTYNAME && d.township_name === TOWNNAME && d.village_name === VILLNAME)[0];\n            }\n            return (\n              <Path\n                key={VILLCODE}\n                village={village}\n                name={`${COUNTYNAME}${TOWNNAME}${VILLNAME}`}\n                path={path}\n                data={targetData.village_data}\n                description={targetData.village_description}\n                setInfo={setInfo}\n                clearSelectedVillage={clearSelectedVillage}\n                zoomInSelectedVillage={zoomInSelectedVillage}\n              />\n            )\n          })\n        }\n      </g>\n    );\n  }\n}\n\nexport default Village;","import React, { Component } from 'react';\nimport './App.css';\nimport * as topojson from 'topojson';\n// import twVillage from './assets/tw-village-topo';\n// import twTown from './assets/tw-town-topo';\n// import twCounty from './assets/tw-county-topo';\n// import twVillage from './assets/taiwan_village.topo';\n// import twTown from './assets/taiwan_town.topo';\n// import twCounty from './assets/taiwan_county.topo';\nimport twVillage from './assets/tw-village.topo';\nimport twTown from './assets/tw-town.topo';\nimport twCounty from './assets/tw-county.topo';\nimport * as d3 from 'd3';\nimport { select } from 'd3-selection';\nimport { geoPath, geoMercator } from 'd3-geo';\nimport { saveSvgAsPng } from 'save-svg-as-png';\nimport throttle from 'lodash.throttle';\nimport isEqual from 'react-fast-compare';\n\nimport update, { extend } from 'immutability-helper';\n\nimport County from './County';\nimport Township from './Township';\nimport Village from './Village';\n\nexport default class Map extends Component {\n  constructor(props) {\n    super(props);\n\n    // this.topoVillage = topojson.feature(twVillage, twVillage.objects.tracts);\n    // this.topoTown = topojson.feature(twTown, twTown.objects.town);\n    // this.topoCounty = topojson.feature(twCounty, twCounty.objects.counties);\n\n    // this.topoVillage = topojson.feature(twVillage, twVillage.objects.taiwan_village);\n    // this.topoTown = topojson.feature(twTown, twTown.objects.taiwan);\n    // this.topoCounty = topojson.feature(twCounty, twCounty.objects.layer1);\n\n\n    const topoVillage = topojson.feature(twVillage, twVillage.objects.village);\n    const topoTown = topojson.feature(twTown, twTown.objects.town);\n    const topoCounty = topojson.feature(twCounty, twCounty.objects.county);\n\n\n    // for Demo only\n    this.counties = [];\n    const county_data = [];\n    topoCounty.features.forEach((c, i) => {\n      const { COUNTYNAME, COUNTYCODE } = c.properties;\n      this.counties.push({\n        name: COUNTYNAME,\n        code: COUNTYCODE\n      })\n      county_data.push({\n        county_name: COUNTYNAME,\n        county_data: parseInt(Math.random() * 100, 10),\n        county_description: `我是 ${COUNTYNAME} 的描述內容`,\n      })\n    });\n    this.towns = [];\n    const township_data = [];\n    topoTown.features.forEach((t, i) => {\n      const { TOWNNAME, COUNTYNAME, TOWNCODE } = t.properties;\n      this.towns.push({\n        name: TOWNNAME,\n        countyName: COUNTYNAME,\n        code: TOWNCODE\n      });\n      township_data.push({\n        county_name: COUNTYNAME,\n        township_name: TOWNNAME,\n        township_data: parseInt(Math.random() * 100, 10),\n        township_description: `我是 ${COUNTYNAME}${TOWNNAME} 的描述內容`,\n      })\n    });\n    this.villages = [];\n    const village_data = []\n    topoVillage.features.forEach((v, i) => {\n      const { VILLNAME, TOWNNAME, COUNTYNAME, VILLCODE } = v.properties;\n      this.villages.push({\n        name: VILLNAME,\n        townName: TOWNNAME,\n        countyName: COUNTYNAME,\n        code: VILLCODE\n      });\n      village_data.push({\n        county_name: COUNTYNAME,\n        township_name: TOWNNAME,\n        village_name: VILLNAME,\n        village_data: parseInt(Math.random() * 100, 10),\n        village_description: `我是 ${COUNTYNAME}${TOWNNAME}${VILLNAME} 的描述內容`,\n      })\n    });\n    props.setDatas({\n      counties: this.counties,\n      towns: this.towns,\n      villages: this.villages\n    });\n    //---------------------------------\n\n    this.selectedCounty = {\n      selection: null,\n      element: null\n    };\n    this.selectedTown = {\n      selection: null,\n      element: null\n    };\n    this.selectedVillage = {\n      selection: null,\n      element: null\n    };\n    this.currentViewport = {\n      x: 480,\n      y: 480,\n      w: 960\n    };\n    const width = (document.body.clientWidth / 3) * 2 - 10;\n    const height = document.body.clientHeight;\n\n    this.zoom = d3.zoom().on('zoom', this.zoomEvent);\n    const prj = geoMercator().center([121, 23.9]).translate([width / 2, height / 2]).scale(10000);\n    this.path = geoPath().projection(prj)\n    this.state = {\n      width,\n      height,\n      center: [width / 2, height / 2],\n      topoCounty: topoCounty,\n      topoTownship: topoTown,\n      topoVillage: topoVillage,\n      county_data,\n      village_data,\n      township_data\n    }\n  }\n  shouldComponentUpdate(nextProps, nextState) {\n    const { county_data, village_data, township_data } = this.state;\n    if (!isEqual(county_data, nextState.county_data)) {\n      return true\n    }\n    if (!isEqual(village_data, nextState.village_data)) {\n      return true\n    }\n    if (!isEqual(township_data, nextState.township_data)) {\n      return true\n    }\n    return false\n  }\n\n  componentDidMount() {\n    /**\n      mouse wheel event\n     */\n    select(this.mapRef)\n      .on('wheel', throttle(this.wheelEvent, 400));\n  }\n  /**\n   * 清除已選的 縣市 \n   */\n  clearSelectedCounty = () => {\n    if (this.selectedCounty.selection !== null) {\n      const tmpSelectedCounty = this.selectedCounty.selection\n      this.selectedCounty.selection\n        .transition()\n        .duration(500)\n        .style('opacity', 0)\n        .on('end', () => {\n          tmpSelectedCounty\n            .style('display', 'none')\n        });\n    }\n    if (this.selectedTown.selection !== null) {\n      const tmpSelectedTown = this.selectedTown.selection\n      this.selectedTown.selection\n        .transition()\n        .duration(500)\n        .style('opacity', 0)\n        .on('end', (town) => {\n          tmpSelectedTown\n            .style('display', 'none')\n        });\n    }\n  }\n  /**\n   * 清除已選的 鄉鎮區\n   */\n  clearSelectedTown = () => {\n    if (this.selectedTown.selection !== null) {\n      const tmpSelectedTown = this.selectedTown.selection\n      this.selectedTown.selection\n        .transition()\n        .duration(500)\n        .style('opacity', 0)\n        .on('end', () => {\n          tmpSelectedTown\n            .style('display', 'none')\n        });\n    }\n    if (this.selectedVillage.selection !== null) {\n      const tmpSelectedVillage = this.selectedVillage.selection\n      tmpSelectedVillage\n        .select('path')\n        .attr('fill', '#FEFEE9')\n    }\n  }\n  /**\n   * 清除已選的 村里\n   */\n  clearSelectedVillage = () => {\n    if (this.selectedVillage.selection !== null) {\n      const tmpSelectedVillage = this.selectedVillage.selection\n      tmpSelectedVillage\n        .select('path')\n        .attr('fill', '#FEFEE9')\n    }\n  }\n  /**\n   * 點擊 縣市 進入 鄉鎮市 Level 的 method\n   * \n   */\n  zoomInSelectedCounty = (county, animate = true) => {\n    if (county === null) {\n      return;\n    }\n    const { COUNTYNAME } = county.properties;\n    this.clearSelectedCounty();\n    this.selectedCounty.element = county\n\n    this.selectedCounty.selection = select(this.mapRef)\n      .select('g.townContainer')\n      .selectAll(`g[data-county=${COUNTYNAME}]`);\n\n    this.selectedCounty.selection\n      .style('display', 'block')\n      .transition()\n      .duration(500)\n      .style('opacity', 1);\n\n    this.selectedTown = {\n      selection: null,\n      element: null\n    };\n\n    if (animate) {\n      this.zoomAnimate(county)\n    }\n  }\n  /**\n   * 點擊 鄉鎮市 進入 村里 Level 的 method\n   *\n   */\n  zoomInSelectedTown = (town, animate = true) => {\n    if (town === null) {\n      return;\n    }\n    const { TOWNNAME, COUNTYNAME } = town.properties;\n\n    this.clearSelectedTown()\n\n    this.selectedTown.element = town;\n    this.selectedTown.selection = select(this.mapRef)\n      .select('g.villageContainer')\n      .selectAll(`g[data-town=${TOWNNAME}][data-county=${COUNTYNAME}]`);\n\n    this.selectedTown.selection\n      .style('display', 'block')\n      .transition()\n      .duration(500)\n      .style('opacity', 1);\n\n    if (animate) {\n      this.zoomAnimate(town)\n    }\n  }\n  /**\n   * 點擊 村里 的 method\n   */\n  zoomInSelectedVillage = (village) => {\n    if (village === null) {\n      return;\n    }\n    const { VILLNAME, TOWNNAME, COUNTYNAME } = village.properties;\n    if (VILLNAME === '') {\n      return;\n    }\n\n    this.clearSelectedVillage()\n\n    this.selectedVillage.element = village;\n    this.selectedVillage.selection = select(this.mapRef)\n      .select('g.villageContainer')\n      .select(`g#${VILLNAME}[data-town=${TOWNNAME}][data-county=${COUNTYNAME}]`)\n\n    this.selectedVillage.selection\n      .select('path')\n      .attr('fill', 'skyblue')\n      .transition()\n      .duration(500);\n\n  }\n  /**\n   * 處理zoom in/out animation 的 method\n   */\n  // zoomAnim = (target, level) => {\n  //   const { height, center } = this.state;\n\n  //   const shape = geoPath().bounds(target)\n  //   const x = this.currentViewport.x;\n  //   const y = this.currentViewport.y;\n  //   const w = this.currentViewport.w;\n\n\n  //   let from = [];\n  //   let to = [];\n  //   if (level === 2) {\n  //     this.currentViewport.x = (shape[1][0] + shape[0][0]) / 2;\n  //     this.currentViewport.y = (shape[1][1] + shape[0][1]) / 2;\n  //     this.currentViewport.w = Math.max((shape[1][1] - shape[0][1]), (shape[1][0] - shape[0][0]));\n  //     from = [x, y, w]\n  //     to = [this.currentViewport.x, this.currentViewport.y, this.currentViewport.w]\n  //   } else {\n  //     this.currentViewport.x = 480;\n  //     this.currentViewport.y = 480;\n  //     this.currentViewport.w = 960;\n  //     from = [x, y, w]\n  //     to = [this.currentViewport.x, this.currentViewport.y, this.currentViewport.w]\n  //   }\n  //   var i = d3.interpolateZoom(from, to);\n  //   select(this.mapRef)\n  //     .selectAll('g.countyContainer, g.townContainer, g.villageContainer')\n  //     .transition()\n  //     .duration(750)\n  //     .attrTween('transform', function () {\n  //       return function (t) {\n  //         return transform(i(t));\n  //       };\n  //     })\n\n  //   function transform(p) {\n  //     let k = (height / p[2]) * 0.8;\n  //     return 'translate(' + (center[0] - p[0] * k) + ',' + (center[1] - p[1] * k) + ')scale(' + k + ')';\n  //   }\n  // }\n  zoomAnimate = (target) => {\n    const { height, center } = this.state;\n    const bounds = this.path.bounds(target);\n    // const dx = bounds[1][0] - bounds[0][0];\n    // const dy = bounds[1][1] - bounds[0][1];\n    const x = (bounds[0][0] + bounds[1][0]) / 2;\n    const y = (bounds[0][1] + bounds[1][1]) / 2;\n    const vw = Math.max((bounds[1][1] - bounds[0][1]), (bounds[1][0] - bounds[0][0]));\n    // scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / width, dy / height))) * 0.8,\n    const scale = (height / vw) * 0.7;\n    // translate = [width / 2 - scale * x, height / 2 - scale * y],\n    const translate = [center[0] - x * scale, center[1] - y * scale];\n    // if (scale > 25) {\n    //   select(this.mapRef)\n    //   .selectAll('path')\n    //   .attr('stroke-width', 0.05)\n    // } else if (scale > 30) {\n    //   select(this.mapRef)\n    //   .selectAll('path')\n    //   .attr('stroke-width', 0.02)\n    // } else {\n    //   select(this.mapRef)\n    //   .selectAll('path')\n    //   .attr('stroke-width', 0.2)\n    // }\n    select(this.mapRef)\n      .transition()\n      .duration(750)\n      .call(this.zoom.transform, d3.zoomIdentity.translate(translate[0], translate[1]).scale(scale));\n  }\n  /**\n   * d3 zoomEvent\n   */\n  zoomEvent = () => {\n    select(this.mapRef)\n      .selectAll('g.countyContainer, g.townContainer, g.villageContainer')\n      .attr('transform', d3.event.transform);\n  }\n  /**\n   * Zoom Out 至初始視圖\n   */\n  zoom_fit = () => {\n    this.clearSelectedCounty();\n    // this.zoomAnim(null, 1);\n    select(this.mapRef)\n      .transition()\n      .duration(750)\n      .call(this.zoom.transform, d3.zoomIdentity);\n    this.selectedCounty = {\n      selection: null,\n      element: null\n    };\n    this.selectedCounty = {\n      selection: null,\n      element: null\n    };\n  }\n  /**\n   * zoom out for wheel event\n   * - auto detect current viewport level\n   */\n  zoom_out = () => {\n    if (this.selectedTown.element !== null) {\n      this.zoomInSelectedCounty(this.selectedCounty.element)\n    } else if (this.selectedCounty.element !== null) {\n      this.zoom_fit()\n    }\n  }\n  /**\n   * 滾輪 method\n   */\n  wheelEvent = () => {\n    if (d3.event === null) {\n      return;\n    }\n    const direction = d3.event.wheelDelta < 0 ? 'down' : 'up';\n    if (direction === 'down') {\n      this.zoom_out()\n    }\n  }\n  /**\n   * 輸出 當下svg 為 png圖檔 並下載\n   */\n  exportToPNG = () => {\n    saveSvgAsPng(this.mapRef, 'map.png')\n  }\n  /**\n   * zoom in 至指定 縣市\n   */\n  goto_county = (countyName) => {\n    const { topoCounty } = this.state;\n    const targetCounty = topoCounty.features.filter(c => c.properties.COUNTYNAME === countyName);\n    this.zoomInSelectedCounty(targetCounty[0]);\n  }\n  /**\n   * 取得 縣市 資料\n   */\n  get_county_data = (countyName) => {\n    const { county_data } = this.state;\n    const targetCounty = county_data.filter(c => c.county_name === countyName);\n    return targetCounty[0].county_data\n  }\n  /**\n   * 設定 縣市 資料\n   */\n  set_county_data = (countyName, data) => {\n    const { county_data } = this.state;\n    county_data.forEach((c, i) => {\n      if (c.county_name === countyName) {\n        if (data === c.county_data) {\n          return;\n        }\n\n        this.setState(({\n          county_data: update(county_data, { [i]: { county_data: { $set: data } } })\n        }))\n      }\n    })\n  }\n  /**\n   * 取得 縣市 描述\n   */\n  get_county_description = (countyName) => {\n    const { county_data } = this.state;\n    const targetCounty = county_data.filter(c => c.county_name === countyName);\n    return targetCounty[0].county_description\n  }\n  /**\n   * 設定 縣市 描述\n   */\n  set_county_description = (countyName, data) => {\n    const { county_data } = this.state;\n    county_data.forEach((c, i) => {\n      if (c.county_name === countyName) {\n        if (data === c.description) {\n          return;\n        }\n\n        this.setState(({\n          county_data: update(county_data, { [i]: { county_description: { $set: data } } })\n        }))\n      }\n    })\n  }\n  /**\n   * zoom in 至指定 鄉鎮區\n   */\n  goto_township = (countyName, townName) => {\n    const { topoCounty, topoTownship } = this.state;\n    const targetCounty = topoCounty.features.filter(c => c.properties.COUNTYNAME === countyName);\n\n    const targetTown = topoTownship.features.filter(t => {\n      const { COUNTYNAME, TOWNNAME } = t.properties;\n      return COUNTYNAME === countyName && TOWNNAME === townName;\n    });\n    this.zoomInSelectedCounty(targetCounty[0], false);\n    this.zoomInSelectedTown(targetTown[0]);\n  }\n  /**\n   * 取得 鄉鎮區 資料\n   */\n  get_township_data = (countyName, townName) => {\n    const { township_data } = this.state\n    const targetTown = township_data.filter(t => {\n      const { county_name, township_name } = t;\n      return county_name === countyName && township_name === townName;\n    });\n    return targetTown[0].township_data;\n  }\n  /**\n   * 設定 鄉鎮區 資料\n   */\n  set_township_data = (countyName, townName, data) => {\n    const { township_data } = this.state\n    township_data.forEach((t, i) => {\n      const { county_name, township_name } = t;\n      if (county_name === countyName && township_name === townName) {\n        if (data === t.township_data) {\n          return;\n        }\n\n        this.setState(({\n          township_data: update(township_data, { [i]: { township_data: { $set: data } } })\n        }))\n      }\n    })\n  }\n  /**\n   * 取得 鄉鎮區 描述\n   */\n  get_township_description = (countyName, townName) => {\n    const { township_data } = this.state\n    const targetTown = township_data.filter(t => {\n      const { county_name, township_name } = t;\n      return county_name === countyName && township_name === townName;\n    });\n    return targetTown[0].township_description;\n  }\n  /**\n   * 設定 鄉鎮區 描述\n   */\n  set_township_description = (countyName, townName, data) => {\n    const { township_data } = this.state\n    township_data.forEach((t, i) => {\n      const { county_name, township_name } = t;\n      if (county_name === countyName && township_name === townName) {\n        if (data === t.township_description) {\n          return;\n        }\n\n        this.setState(({\n          township_data: update(township_data, { [i]: { township_description: { $set: data } } })\n        }))\n      }\n    })\n  }\n  /**\n   * zoom in 至指定 村里\n   */\n  goto_village = (countyName, townName, villageName) => {\n    const { topoCounty, topoTownship, topoVillage } = this.state\n    const targetCounty = topoCounty.features.filter(c => c.properties.COUNTYNAME === countyName);\n    const targetTown = topoTownship.features.filter(t => {\n      const { COUNTYNAME, TOWNNAME } = t.properties;\n      return COUNTYNAME === countyName && TOWNNAME === townName;\n    });\n    const targetVillage = topoVillage.features.filter(v => {\n      const { COUNTYNAME, TOWNNAME, VILLNAME } = v.properties;\n      return COUNTYNAME === countyName && TOWNNAME === townName && VILLNAME === villageName;\n    });\n    this.zoomInSelectedCounty(targetCounty[0], false);\n    this.zoomInSelectedTown(targetTown[0]);\n    this.zoomInSelectedVillage(targetVillage[0])\n  }\n  /**\n   * 取得 村里 資料\n   */\n  get_village_data = (countyName, townName, villageName) => {\n    const { village_data } = this.state;\n    const targetVillage = village_data.filter(v => {\n      const { county_name, township_name, village_name } = v;\n      return county_name === countyName && township_name === townName && village_name === villageName;\n    });\n    return targetVillage[0].village_data;\n  }\n  /**\n   * 設定 村里 資料\n   */\n  set_village_data = (countyName, townName, villageName, data) => {\n    const { village_data } = this.state;\n    village_data.forEach((v, i) => {\n      const { county_name, township_name, village_name } = v;\n      if (county_name === countyName && township_name === townName && village_name === villageName) {\n        if (data === v.village_data) {\n          return;\n        }\n        this.setState(({\n          village_data: update(village_data, { [i]: { village_data: { $set: data } } })\n        }))\n      }\n    });\n  }\n  /**\n   * 取得 村里 描述\n   */\n  get_village_description = (countyName, townName, villageName) => {\n    const { topoVillage } = this.state;\n    const targetVillage = topoVillage.features.filter(v => {\n      const { COUNTYNAME, TOWNNAME, VILLNAME } = v.properties;\n      return COUNTYNAME === countyName && TOWNNAME === townName && VILLNAME === villageName;\n    });\n    return targetVillage[0].properties.village_description;\n  }\n  /**\n   * 設定 村里 描述\n   */\n  set_village_description = (countyName, townName, villageName, data) => {\n    const { village_data } = this.state;\n    village_data.forEach((v, i) => {\n      const { county_name, township_name, village_name } = v;\n      if (county_name === countyName && township_name === townName && village_name === villageName) {\n        if (data === v.village_description) {\n          return;\n        }\n        this.setState(({\n          village_data: update(village_data, { [i]: { village_description: { $set: data } } })\n        }))\n      }\n    });\n  }\n  render() {\n    const { setInfo } = this.props;\n    const { topoCounty, topoTownship, topoVillage, county_data, township_data, village_data } = this.state\n    return (\n      <svg ref={ref => this.mapRef = ref} width={'100%'} height={'100%'}>\n        <County\n          topoData={topoCounty}\n          data={county_data}\n          path={this.path}\n          setInfo={setInfo}\n          clearSelectedCounty={this.clearSelectedCounty}\n          zoomInSelectedCounty={this.zoomInSelectedCounty}\n        />\n        <Township\n          topoData={topoTownship}\n          data={township_data}\n          path={this.path}\n          setInfo={setInfo}\n          clearSelectedTown={this.clearSelectedTown}\n          zoomInSelectedTown={this.zoomInSelectedTown}\n        />\n        <Village\n          topoData={topoVillage}\n          data={village_data}\n          path={this.path}\n          setInfo={setInfo}\n          clearSelectedVillage={this.clearSelectedVillage}\n          zoomInSelectedVillage={this.zoomInSelectedVillage}\n        />\n      </svg>\n    );\n  }\n}\n","import React from 'react';\n\nexport const InfoModal = ({ info }) => {\n  // console.log(info);\n  if (info === null) {\n    return null\n  }\n  return (\n    <div className=\"infoModal\">\n      <p className=\"name\">{info.name}</p>\n      <p className=\"data\">{info.data}</p>\n      <p className=\"description\">{info.description}</p>\n    </div>\n  )\n}","import React, { Component } from 'react';\nimport './App.css';\nimport Map from './Map';\nimport { InfoModal } from './InfoModal';\n\nexport default class App extends Component {\n  state = {\n    info: null,\n    counties: [],\n    towns: [],\n    villages: [],\n    selectedCounty: '',\n    selectedTown: '',\n    selectedVillage: '',\n  }\n  setInfo = (info) => {\n    this.setState({\n      info\n    })\n  }\n  setDatas = ({ counties, towns, villages }) => {\n    const selectedCounty = counties[0];\n    const selectedTown = towns.filter(t => t.countyName === selectedCounty.name)[0];\n    const selectedVillage = villages.filter(v => v.countyName === selectedCounty.name && v.townName === selectedTown.name)[0]\n    this.setState({\n      counties,\n      towns,\n      villages,\n      selectedCounty: JSON.stringify(selectedCounty),\n      selectedTown: JSON.stringify(selectedTown),\n      selectedVillage: JSON.stringify(selectedVillage),\n    })\n  }\n  onCountySelect = (e) => {\n    const { towns, villages } = this.state;\n    const { name } = JSON.parse(e.target.value);\n    const selectedTown = towns.filter(t => t.countyName === name)[0];\n    const selectedVillage = villages.filter(v => v.countyName === name && v.townName === selectedTown.name)[0]\n    this.setState({\n      selectedCounty: e.target.value,\n      selectedTown: JSON.stringify(selectedTown),\n      selectedVillage: JSON.stringify(selectedVillage),\n    })\n  }\n  onTownSelect = (e) => {\n    const { villages } = this.state;\n    const { name, countyName } = JSON.parse(e.target.value);\n    const selectedVillage = villages.filter(v => v.countyName === countyName && v.townName === name)[0]\n    this.setState({\n      selectedTown: e.target.value,\n      selectedVillage: JSON.stringify(selectedVillage)\n    })\n  }\n  onVillageSelect = (e) => {\n    const { name } = JSON.parse(e.target.value);\n    this.setState({\n      selectedVillage: e.target.value\n    })\n  }\n  toCounty = () => {\n    const { selectedCounty } = this.state;\n    if (selectedCounty !== '') {\n      const { name } = JSON.parse(selectedCounty);\n      this.map.goto_county(name)\n    }\n  }\n  getCountyData = () => {\n    const { selectedCounty } = this.state;\n    if (selectedCounty !== '') {\n      const { name } = JSON.parse(selectedCounty);\n      const data = this.map.get_county_data(name);\n      alert(data);\n    }\n  }\n  setCountyData = () => {\n    const { selectedCounty } = this.state;\n    const { name } = JSON.parse(selectedCounty);\n    const data = this.countyData.value;\n    this.map.set_county_data(name, data)\n  }\n  getCountyDescription = () => {\n    const { selectedCounty } = this.state;\n    if (selectedCounty !== '') {\n      const { name } = JSON.parse(selectedCounty);\n      const desciption = this.map.get_county_description(name)\n      alert(desciption);\n    }\n  }\n  setCountyDescription = () => {\n    const { selectedCounty } = this.state;\n    const { name } = JSON.parse(selectedCounty);\n    const data = this.countyDescription.value;\n    this.map.set_county_description(name, data)\n  }\n  toTown = () => {\n    const { selectedTown } = this.state;\n    if (selectedTown !== '') {\n      const { name, countyName } = JSON.parse(selectedTown);\n      this.map.goto_township(countyName, name)\n    }\n  }\n  getTownshipData = () => {\n    const { selectedTown } = this.state;\n    if (selectedTown !== '') {\n      const { name, countyName } = JSON.parse(selectedTown);\n      const data = this.map.get_township_data(countyName, name);\n      alert(data);\n    }\n  }\n  setTownshipData = () => {\n    const { selectedTown } = this.state;\n    const { name, countyName } = JSON.parse(selectedTown);\n    const data = this.townshipData.value;\n    this.map.set_township_data(countyName, name, data)\n  }\n  getTownshipDescription = () => {\n    const { selectedTown } = this.state;\n    if (selectedTown !== '') {\n      const { name, countyName } = JSON.parse(selectedTown);\n      const desciption = this.map.get_township_description(countyName, name)\n      alert(desciption);\n    }\n  }\n  setTownshipDescription = () => {\n    const { selectedTown } = this.state;\n    const { name, countyName } = JSON.parse(selectedTown);\n    const data = this.townshipDescription.value;\n    this.map.set_township_description(countyName, name, data)\n  }\n  toVillage = () => {\n    const { selectedVillage } = this.state;\n    if (selectedVillage !== '') {\n      const { name, countyName, townName } = JSON.parse(selectedVillage);\n      this.map.goto_village(countyName, townName, name)\n    }\n  }\n  getVillageData = () => {\n    const { selectedVillage } = this.state;\n    if (selectedVillage !== '') {\n      const { name, countyName, townName } = JSON.parse(selectedVillage);\n      const data = this.map.get_village_data(countyName, townName, name);\n      alert(data);\n    }\n  }\n  setVillageData = () => {\n    const { selectedVillage } = this.state;\n    const { name, countyName, townName } = JSON.parse(selectedVillage);\n    const data = this.villageData.value;\n    this.map.set_village_data(countyName, townName, name, data)\n  }\n  getVillageDescription = () => {\n    const { selectedVillage } = this.state;\n    if (selectedVillage !== '') {\n      const { name, countyName, townName } = JSON.parse(selectedVillage);\n      const desciption = this.map.get_village_description(countyName, townName, name)\n      alert(desciption);\n    }\n  }\n  setVillageDescription = () => {\n    const { selectedVillage } = this.state;\n    const { name, countyName, townName } = JSON.parse(selectedVillage);\n    const data = this.villageDescription.value;\n    this.map.set_village_description(countyName, townName, name, data)\n  }\n  backToTopLevel = () => {\n    this.map.zoom_fit();\n  }\n  exportToPNG = () => {\n    this.map.exportToPNG();\n  }\n  render() {\n    const {\n      info,\n      counties,\n      towns,\n      villages,\n      selectedCounty,\n      selectedTown,\n      selectedVillage\n    } = this.state;\n    return (\n      <div className=\"App\">\n        <div style={{ flex: 2 }}>\n          <Map\n            ref={ref => this.map = ref}\n            setInfo={this.setInfo}\n            setDatas={this.setDatas}\n          />\n        </div>\n        <div style={{ flex: 1 }}>\n          <div>\n            <div className='controller'>\n              <div>\n                <select\n                  name=\"county\"\n                  id=\"selectCounty\"\n                  ref={ref => this.countySelect = ref}\n                  onChange={this.onCountySelect}\n                  value={selectedCounty}\n                >\n                  {\n                    counties.map((c, i) => <option key={c.code} value={JSON.stringify(c)}>{c.name}</option>)\n                  }\n                </select>\n                <input type=\"button\" onClick={this.toCounty} value=\"傳送\" />\n                <input type=\"button\" onClick={this.getCountyData} value=\"取得資料\" />\n                <input type=\"button\" onClick={this.getCountyDescription} value=\"取得描述\" />\n              </div>\n              <div>\n                <input type=\"text\" ref={ref => this.countyData = ref} />\n                <input type=\"button\" onClick={this.setCountyData} value=\"設定資料\" />\n              </div>\n              <div>\n                <input type=\"text\" ref={ref => this.countyDescription = ref} />\n                <input type=\"button\" onClick={this.setCountyDescription} value=\"設定描述\" />\n              </div>\n            </div>\n            <div className='controller'>\n              <div>\n                <select\n                  name=\"town\"\n                  id=\"selectTown\"\n                  ref={ref => this.townSelect = ref}\n                  onChange={this.onTownSelect}\n                  value={selectedTown}\n                >\n                  {\n                    towns.map(t => {\n                      const { name, countyName, code } = t;\n                      if (JSON.parse(selectedCounty).name === countyName) {\n                        return (\n                          <option key={code} value={JSON.stringify(t)}>{name}</option>\n                        )\n                      }\n                    })\n                  }\n                </select>\n                <input type=\"button\" onClick={this.toTown} value=\"傳送\" />\n                <input type=\"button\" onClick={this.getTownshipData} value=\"取得資料\" />\n                <input type=\"button\" onClick={this.getTownshipDescription} value=\"取得描述\" />\n              </div>\n              <div>\n                <input type=\"text\" ref={ref => this.townshipData = ref} />\n                <input type=\"button\" onClick={this.setTownshipData} value=\"設定資料\" />\n              </div>\n              <div>\n                <input type=\"text\" ref={ref => this.townshipDescription = ref} />\n                <input type=\"button\" onClick={this.setTownshipDescription} value=\"設定描述\" />\n              </div>\n            </div>\n            <div className='controller'>\n              <div>\n                <select\n                  name=\"village\"\n                  id=\"selectVillage\"\n                  ref={ref => this.villageSelect = ref}\n                  onChange={this.onVillageSelect}\n                  value={selectedVillage}\n                >\n                  {\n                    villages.map(v => {\n                      const { name, countyName, townName, code } = v;\n                      if (JSON.parse(selectedCounty).name === countyName && JSON.parse(selectedTown).name === townName && name !== '') {\n                        return (\n                          <option key={code} value={JSON.stringify(v)}>{name}</option>\n                        )\n                      }\n                    })\n                  }\n                </select>\n                <input type=\"button\" onClick={this.toVillage} value=\"傳送\" />\n                <input type=\"button\" onClick={this.getVillageData} value=\"取得資料\" />\n                <input type=\"button\" onClick={this.getVillageDescription} value=\"取得描述\" />\n              </div>\n              <div>\n                <input type=\"text\" ref={ref => this.villageData = ref} />\n                <input type=\"button\" onClick={this.setVillageData} value=\"設定資料\" />\n              </div>\n              <div>\n                <input type=\"text\" ref={ref => this.villageDescription = ref} />\n                <input type=\"button\" onClick={this.setVillageDescription} value=\"設定描述\" />\n              </div>\n            </div>\n            <div>\n              <input type=\"button\" value=\"回到最上層\" onClick={this.backToTopLevel} />\n            </div>\n            <div>\n              <input type=\"button\" value=\"儲存PNG圖檔\" onClick={this.exportToPNG} />\n            </div>\n          </div>\n          <InfoModal info={info} />\n        </div>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}