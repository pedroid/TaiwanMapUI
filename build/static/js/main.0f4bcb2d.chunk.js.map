{"version":3,"sources":["Map.js","InfoModal.js","App.js","serviceWorker.js","index.js"],"names":["Map","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleCityPress","properties","console","log","setState","city","name","selectedCity","COUNTYSN","renderCounty","_this$state","state","height","center","setCounties","path","geoPath","counties","topoCounty","features","forEach","c","push","select","mapRef","style","append","attr","selectAll","data","enter","d","on","renderCountyInfo","county","clearSelectedCounty","zoomInSelectedCounty","setInfo","renderTown","_this$state2","topoTown","renderTownInfo","town","clearSelectedTown","zoomInSelectedTown","renderVillage","_this$state3","topoVillage","renderVillageInfo","selectedCounty","selection","tmpSelectedCounty","transition","duration","selectedTown","tmpSelectedTown","element","filter","t","includes","zoomAnim","target","level","_this$state4","shape","bounds","x","currentViewport","y","w","from","to","Math","max","i","d3","attrTween","p","k","transform","zoom_fit","zoom_out","wheelEvent","wheelDelta","exportToPNG","saveSvgAsPng","topojson","twVillage","objects","tracts","twTown","twCounty","width","document","body","clientWidth","clientHeight","topo","throttle","_this2","_this$state5","react_default","a","createElement","ref","Component","InfoModal","_ref","info","className","App","toCounty","countySelect","value","map","JSON","parse","backToTopLevel","flex","Map_Map","id","key","stringify","type","onClick","marginLeft","InfoModal_InfoModal","Boolean","window","location","hostname","match","ReactDOM","render","App_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0f4bcb2d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport * as topojson from 'topojson';\nimport twVillage from './assets/tw-village-topo';\nimport twTown from './assets/tw-town-topo';\nimport twCounty from './assets/tw-county-topo';\n// import twVillage from './assets/taiwan_village.topo';\n// import twTown from './assets/taiwan_town.topo';\n// import twCounty from './assets/taiwan_county.topo';\nimport * as d3 from \"d3\";\nimport { select } from 'd3-selection';\nimport { geoPath, geoMercator } from 'd3-geo';\nimport { saveSvgAsPng } from 'save-svg-as-png';\nimport throttle from 'lodash.throttle';\n\nexport default class Map extends Component {\n  constructor(props) {\n    super(props);\n\n    this.topoVillage = topojson.feature(twVillage, twVillage.objects.tracts);\n    this.topoTown = topojson.feature(twTown, twTown.objects.town);\n    this.topoCounty = topojson.feature(twCounty, twCounty.objects.counties);\n    this.selectedCounty = {\n      selection: null,\n      element: null\n    };\n    this.selectedTown = {\n      selection: null,\n      element: null\n    };\n    this.currentViewport = {\n      x: 480,\n      y: 480,\n      w: 960\n    };\n    const width = (document.body.clientWidth / 3) * 2;\n    const height = document.body.clientHeight;\n    this.state = {\n      city: '',\n      selectedCity: '',\n      topo: {\n        features: []\n      },\n      width,\n      height,\n      center: [width / 2, height / 2]\n    }\n  }\n  handleCityPress = (properties) => {\n    console.log(properties);\n    this.setState({\n      city: properties.name,\n      selectedCity: properties.COUNTYSN,\n    });\n  }\n  shouldComponentUpdate() {\n    // return false\n    return true\n  }\n  // componentDidMount() {\n  //   // console.log(topoTown)\n  //   console.log('====================================');\n  //   console.log(twVillage);\n  //   console.log(twTown);\n  //   console.log(twCounty);\n  //   console.log('====================================');\n  //   // this.setState({\n  //   //   topo: topojson.feature(twTopo, twTopo.objects.taiwan)\n  //   // })\n  //   var width = document.body.clientWidth\n  //   var height = document.body.clientHeight\n  //   var center = [width / 2, height / 2]\n  //   const prj = geoMercator().center([121, 23.9]).scale(10000);\n\n  //   const path = geoPath().projection(prj);\n\n  //   // const topoVillage = topojson.feature(twVillage, twVillage.objects.tracts);\n  //   // const topoTown = topojson.feature(twTown, twTown.objects.town)\n  //   // const topoCounty = topojson.feature(twCounty, twCounty.objects.counties)\n\n  //   const topoVillage = topojson.feature(twVillage, twVillage.objects.taiwan_village);\n  //   const topoTown = topojson.feature(twTown, twTown.objects.taiwan)\n  //   const topoCounty = topojson.feature(twCounty, twCounty.objects.layer1)\n  //   // console.log(topoTown)\n  //   select(this.mapRef)\n  //     .append('g')\n  //     .attr('class', 'mapContainer')\n  //     .selectAll('path')\n  //     .data(topoCounty.features)\n  //     .enter()\n  //     .append('g')\n  //     .attr('id', (d) => d.properties.name)\n  //     .attr('strokeWidth', 1)\n  //     .attr('stroke', 'black')\n  //     .append('path')\n  //     .attr('class', 'county')\n  //     .attr('d', path)\n  //     .attr('fill', '#FEFEE9')\n  //     .on('click', (d) => {\n  //       console.log(d.properties)\n  //       const { name } = d.properties;\n\n  //       select(this.mapRef)\n  //         .selectAll('.selected')\n  //         .classed('selected', false)\n  //         .attr('strokeWidth', 1)\n  //         .attr('stroke', 'black')\n  //         .selectAll('g')\n  //         .remove()\n\n  //       const g = select(this.mapRef)\n  //         .select(`g#${name}`)\n  //       g\n  //         .classed('selected', true)\n  //         .attr('strokeWidth', 0.1)\n  //         .attr('stroke', 'pink')\n  //         .selectAll('path')\n  //         .data(topoTown.features.filter(t => t.properties.C_Name === name))\n  //         .enter()\n  //         .append('g')\n  //         .attr('id', (d) => d.properties.T_UID)\n  //         .attr('strokeWidth', 0.1)\n  //         .attr('stroke', 'pink')\n  //         .append('path')\n  //         .attr('class', 'town')\n  //         .attr('d', path)\n  //         .attr('fill', '#FEFEE9')\n\n\n  //       var b = path.bounds(d)\n  //       select(this.mapRef)\n  //       select('g')\n  //         .transition().duration(750).attr(\"transform\",\n  //           \"translate(\" + prj.translate() + \")\"\n  //           + \"scale(\" + .95 / Math.max((b[1][0] - b[0][0]) / width, (b[1][1] - b[0][1]) / height) + \")\"\n  //           + \"translate(\" + -(b[1][0] + b[0][0]) / 2 + \",\" + -(b[1][1] + b[0][1]) / 2 + \")\");\n  //     });\n  // }\n  componentDidMount() {\n\n    // var width = document.body.clientWidth\n    // var height = document.body.clientHeight\n    // var center = [width / 2, height / 2]\n    // const prj = geoMercator().center([121, 23.9]);\n\n    this.renderCounty();\n    this.renderTown();\n    this.renderVillage();\n    select(this.mapRef)\n      .on('wheel', throttle(this.wheelEvent, 400));\n  }\n  renderCounty = () => {\n    const { height, center } = this.state;\n    const { setCounties } = this.props;\n    const path = geoPath();\n    const counties = [];\n    this.topoCounty.features.forEach(c => {\n      counties.push(c)\n    });\n    setCounties(counties)\n    select(this.mapRef)\n      .style('z-index', '0')\n      .append('g')\n      .attr('class', 'countyContainer')\n      .attr(\"transform\", \"translate(\" + (center[0] - 480 * ((height / 960) * 0.8)) + \",\" + (center[1] - 480 * ((height / 960) * 0.8)) + \")scale(\" + (height / 960) * 0.8 + \")\")\n      .selectAll('path')\n      .data(this.topoCounty.features)\n      .enter()\n      .append('g')\n      .attr('class', 'county')\n      .attr('id', (d) => d.properties.name)\n      .attr('stroke-width', 0.3)\n      .attr('stroke', 'black')\n      .append('path')\n      .attr('class', 'county')\n      .attr('d', path)\n      .attr('fill', '#FEFEE9')\n      .on('mouseover', this.renderCountyInfo)\n      .on('click', (county) => {\n        // console.log(county)\n        this.clearSelectedCounty();\n\n        this.zoomInSelectedCounty(county)\n      });\n  }\n  renderCountyInfo = (d) => {\n    const { setInfo } = this.props;\n    setInfo(d.properties);\n  }\n  renderTown = () => {\n    const { height, center } = this.state;\n    const path = geoPath();\n    // select(this.townRef)\n    //   .style('z-index', '-1')\n\n    select(this.mapRef)\n      .append('g')\n      .attr('class', 'townContainer')\n      .attr(\"transform\", \"translate(\" + (center[0] - 480 * ((height / 960) * 0.8)) + \",\" + (center[1] - 480 * ((height / 960) * 0.8)) + \")scale(\" + (height / 960) * 0.8 + \")\")\n      .selectAll('path')\n      .data(this.topoTown.features)\n      .enter()\n      .append('g')\n      .attr('class', 'town')\n      .attr('id', (d) => d.properties.name)\n      .attr('stroke-width', 0.3)\n      .attr('stroke', 'pink')\n      .style('display', 'none')\n      .style('opacity', 0)\n      .append('path')\n      .attr('class', 'town')\n      .attr('d', path)\n      .attr('fill', '#FEFEE9')\n      .on('mouseover', this.renderTownInfo)\n      .on('click', (town) => {\n\n        this.clearSelectedTown();\n        this.zoomInSelectedTown(town)\n      });\n  }\n  renderTownInfo = (d) => {\n    const { setInfo } = this.props;\n    setInfo(d.properties);\n  }\n  renderVillage = () => {\n    const { height, center } = this.state;\n    const path = geoPath();\n    // select(this.townRef)\n    //   .style('z-index', '-1')\n\n    select(this.mapRef)\n      .append('g')\n      .attr('class', 'villageContainer')\n      .attr(\"transform\", \"translate(\" + (center[0] - 480 * ((height / 960) * 0.8)) + \",\" + (center[1] - 480 * ((height / 960) * 0.8)) + \")scale(\" + (height / 960) * 0.8 + \")\")\n      .selectAll('path')\n      .data(this.topoVillage.features)\n      .enter()\n      .append('g')\n      .attr('class', 'town')\n      .attr('id', (d) => d.properties.name)\n      .attr('stroke-width', 0.3)\n      .attr('stroke', 'skyblue')\n      .style('display', 'none')\n      .style('opacity', 0)\n      .append('path')\n      .attr('class', 'town')\n      .attr('d', path)\n      .attr('fill', '#FEFEE9')\n      .on('mouseover', this.renderVillageInfo)\n  }\n  renderVillageInfo = (d) => {\n    const { setInfo } = this.props;\n    setInfo(d.properties);\n  }\n  /**\n   * zoom out 所有 \n   */\n  clearSelectedCounty = () => {\n    if (this.selectedCounty.selection !== null) {\n      const tmpSelectedCounty = this.selectedCounty.selection\n      this.selectedCounty.selection\n        .transition()\n        .duration(500)\n        .style('opacity', 0)\n        .on('end', (town) => {\n          tmpSelectedCounty\n            .style('display', 'none')\n        });\n    }\n    if (this.selectedTown.selection !== null) {\n      const tmpSelectedTown = this.selectedTown.selection\n      this.selectedTown.selection\n        .transition()\n        .duration(500)\n        .style('opacity', 0)\n        .on('end', (town) => {\n          tmpSelectedTown\n            .style('display', 'none')\n        });\n    }\n  }\n  clearSelectedTown = () => {\n    if (this.selectedTown.selection !== null) {\n      const tmpSelectedTown = this.selectedTown.selection\n      this.selectedTown.selection\n        .transition()\n        .duration(500)\n        .style('opacity', 0)\n        .on('end', (town) => {\n          tmpSelectedTown\n            .style('display', 'none')\n        });\n    }\n  }\n  /**\n   * 點擊 縣市 進入 鄉鎮市 Level 的 method\n   * \n   */\n  zoomInSelectedCounty = (county) => {\n    const { name } = county.properties;\n    this.clearSelectedCounty();\n    this.selectedCounty.element = county\n    this.selectedCounty.selection = select(this.mapRef)\n      .select('g.townContainer')\n      .selectAll('g')\n      .filter(t => t.properties.name.includes(name));\n\n    this.selectedCounty.selection\n      .style('display', 'block')\n      .transition()\n      .duration(500)\n      .style('opacity', 1);\n\n    this.selectedTown = {\n      selection: null,\n      element: null\n    };\n\n    this.zoomAnim(county, 2);\n  }\n  /**\n   * 點擊 鄉鎮市 進入 村里 Level 的 method\n   *\n   */\n  zoomInSelectedTown = (town) => {\n    const { name } = town.properties;\n    this.clearSelectedTown()\n    this.selectedTown.element = town;\n    this.selectedTown.selection = select(this.mapRef)\n      .select('g.villageContainer')\n      .selectAll('g')\n      .filter(t => t.properties.name.includes(name))\n    this.selectedTown.selection\n      .style('display', 'block')\n      .transition()\n      .duration(500)\n      .style('opacity', 1);\n\n    this.zoomAnim(town, 2);\n  }\n  /**\n   * 處理zoom in/out animation 的 method\n   * level: 1 => 縣市層級, 2 => 鄉鎮市村里層級\n   */\n  zoomAnim = (target, level) => {\n    const { height, center } = this.state;\n\n    const shape = geoPath().bounds(target)\n    const x = this.currentViewport.x;\n    const y = this.currentViewport.y;\n    const w = this.currentViewport.w;\n\n\n    let from = [];\n    let to = [];\n    if (level === 2) {\n      this.currentViewport.x = (shape[1][0] + shape[0][0]) / 2;\n      this.currentViewport.y = (shape[1][1] + shape[0][1]) / 2;\n      this.currentViewport.w = Math.max((shape[1][1] - shape[0][1]), (shape[1][0] - shape[0][0]));\n      from = [x, y, w]\n      to = [this.currentViewport.x, this.currentViewport.y, this.currentViewport.w]\n    } else {\n      this.currentViewport.x = 480;\n      this.currentViewport.y = 480;\n      this.currentViewport.w = 960;\n      from = [x, y, w]\n      to = [this.currentViewport.x, this.currentViewport.y, this.currentViewport.w]\n    }\n    var i = d3.interpolateZoom(from, to);\n    select(this.mapRef)\n      .selectAll('g.countyContainer, g.townContainer, g.villageContainer')\n      .transition()\n      .duration(750)\n      .attrTween(\"transform\", function () {\n        return function (t) {\n          return transform(i(t));\n        };\n      })\n\n    function transform(p) {\n      let k = (height / p[2]) * 0.8;\n      return \"translate(\" + (center[0] - p[0] * k) + \",\" + (center[1] - p[1] * k) + \")scale(\" + k + \")\";\n    }\n  }\n  /**\n   * Zoom Out 至初始視圖\n   */\n  zoom_fit = () => {\n    this.clearSelectedCounty();\n    this.zoomAnim(null, 1);\n    this.selectedCounty = {\n      selection: null,\n      element: null\n    };\n  }\n  zoom_out = () => {\n    if (this.selectedTown.element !== null) {\n      this.zoomInSelectedCounty(this.selectedCounty.element)\n    } else if (this.selectedCounty.element !== null) {\n      this.zoom_fit()\n    }\n  }\n  wheelEvent = () => {\n    if (d3.event === null) {\n      return;\n    }\n    const direction = d3.event.wheelDelta < 0 ? 'down' : 'up';\n    if (direction === 'up') {\n      this.zoom_out()\n    }\n  }\n  exportToPNG = () => {\n    saveSvgAsPng(this.mapRef, 'map.png')\n  }\n  render() {\n\n    const { width, height } = this.state;\n    return (\n      <svg ref={ref => this.mapRef = ref} width={width} height={height} ></svg>\n    );\n  }\n}\n","import React from 'react';\n\nexport const InfoModal = ({ info }) => {\n  // console.log(info);\n  if (info === null) {\n    return null\n  }\n  return (\n    <div className=\"infoModal\">\n      <p>{info.name}</p>\n    </div>\n  )\n}","import React, { Component } from 'react';\nimport './App.css';\nimport Map from './Map';\nimport { InfoModal } from './InfoModal';\n\nexport default class App extends Component {\n  state = {\n    info: null,\n    counties: []\n  }\n  setInfo = (info) => {\n    this.setState({\n      info\n    })\n  }\n  setCounties = (counties) => {\n    this.setState({\n      counties\n    })\n  }\n  toCounty = () => {\n    if (this.countySelect.value !== '') {\n      this.map.zoomInSelectedCounty(JSON.parse(this.countySelect.value))\n    }\n  }\n  backToTopLevel = () => {\n    this.map.zoom_fit();\n  }\n  exportToPNG = () => {\n    this.map.exportToPNG();\n  }\n  render() {\n    const { info, counties } = this.state;\n    return (\n      <div className=\"App\">\n        <div style={{ flex: 2 }}>\n          <Map ref={ref => this.map = ref} setInfo={this.setInfo} setCounties={this.setCounties} />\n        </div>\n        <div style={{ flex: 1 }}>\n          <div>\n            <select name=\"county\" id=\"selectCounty\" ref={ref => this.countySelect = ref}>\n              {\n                counties.map(c => <option key={c.properties.name} value={JSON.stringify(c)}>{c.properties.name}</option>)\n              }\n            </select>\n            <input type=\"button\" onClick={this.toCounty} value=\"傳送\" style={{ marginLeft: 5 }} />\n            <div>\n              <input type=\"button\" value=\"回到最上層\" onClick={this.backToTopLevel} />\n            </div>\n            <div>\n              <input type=\"button\" value=\"儲存PNG圖檔\" onClick={this.exportToPNG} />\n            </div>\n          </div>\n          <InfoModal info={info} />\n        </div>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}